from functions import * 


def test_check_stability():
    assert check_stability(5, 3, 4) == True
    assert check_stability(5, 2, 4) == False
    assert check_stability(19, 3, 11) == True
    assert check_stability(15, 4, 9) == True
    assert check_stability(9, 3, 6) == True
    assert check_stability(12, 3, 8) == False
    assert check_stability(10, 3, 6) == True


def test_globalize():
    for test in globalization_tests:
        dim = test["global_array"].shape[0]
        assert (globalize(dim, test["index"], test["array"]) == test["global_array"]).all()
    

globalization_tests = [
    {
        "index": [7, 8, 9, 10],
        "array": np.array([[0.8, -0.0, -0.8, 0.0], 
                           [-0.0, 0.8, 0.0, -0.8], 
                           [-0.8, 0.0, 0.8, -0.0], 
                           [0.0, -0.8, -0.0, 0.8]]),
        "global_array": np.array([[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8, -0.0, -0.8, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.8, 0.0, -0.8, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8, 0.0, 0.8, -0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8, -0.0, 0.8, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]])
    },
    {
        "index": [1, 2, 11, 12],
        "array": np.array([[0.50440760336032, 0.302644562016192, -0.50440760336032, -0.302644562016192], 
                           [0.302644562016192, 0.50440760336032, -0.302644562016192, -0.50440760336032], 
                           [-0.50440760336032, -0.302644562016192, 0.50440760336032, 0.302644562016192], 
                           [-0.302644562016192, -0.50440760336032, 0.302644562016192, 0.50440760336032]]),
        "global_array": np.array([[0.50440760336032, 0.302644562016192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.50440760336032, -0.302644562016192], 
                                  [0.302644562016192, 0.50440760336032, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.302644562016192, -0.50440760336032], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
                                  [-0.50440760336032, -0.302644562016192, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.50440760336032, 0.302644562016192], 
                                  [-0.302644562016192, -0.50440760336032, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.302644562016192, 0.50440760336032]])
    },
]